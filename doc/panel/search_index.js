var search_data = {"index":{"searchIndex":["class","date","datetime","enumerable","exception","json","editor","editmenu","filemenu","gtk","treeiter","jsontreeview","mainwindow","menuextension","optionsmenu","popupmenu","ext","generator","generatormethods","array","bignum","falseclass","fixnum","float","hash","nilclass","object","string","extend","trueclass","state","parser","generatorerror","generatorerror","jsonerror","missingunicodesupport","nestingerror","parsererror","pure","generator","generatormethods","array","falseclass","float","hash","integer","nilclass","object","string","extend","trueclass","state","parser","kernel","object","range","regexp","struct","symbol","time","[]()","[]()","[]()","add_item()","add_separator()","allow_nan?()","allow_nan?()","append_new_node()","array_nl()","array_nl=()","ascii_only?()","ascii_only?()","ask_for_element()","ask_for_find_term()","ask_for_hash_pair()","ask_for_location()","ask_for_order()","ask_save()","change()","change_node()","check_circular?()","check_circular?()","clear()","collapse_expand()","collapsed_nodes()","configure()","configure()","content()","content=()","copy()","copy_node()","create()","create()","create()","create()","create()","create_menu_bar()","create_node()","cut_node()","data2model()","display_status()","display_title()","dump()","each()","edit()","edit()","error_dialog()","expand_collapse()","fast_generate()","fetch_icon()","file_open()","file_save()","file_save_as()","find()","find_again()","from_state()","from_state()","generate()","generate()","generate()","iconv()","included()","included()","indent()","indent=()","initialize_copy()","insert_new_node()","json_creatable?()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","load()","load_file()","load_location()","location_open()","max_nesting()","max_nesting=()","method_missing()","model2data()","new()","new()","new()","new()","new()","new()","new()","new()","object_nl()","object_nl=()","open()","open_location()","parse()","parse()","parse()","parse!()","paste()","paste_node_appending()","paste_node_inserting_before()","pretty_generate()","pretty_saving()","question_dialog()","quit()","quit()","read_data()","recurse_proc()","recursive_each()","remove_subtree()","restore()","revert()","save()","save_as()","select_file()","sort()","source()","space()","space=()","space_before()","space_before=()","start()","store_file()","to_h()","to_h()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json_raw()","to_json_raw()","to_json_raw_object()","to_json_raw_object()","type()","type=()","unchange()","view_new_model()","readme","generator.c","parser.c","json.rb","core.rb","rails.rb","common.rb","editor.rb","ext.rb","pure.rb","generator.rb","parser.rb","version.rb"],"longSearchIndex":["lib/json/common.rb","lib/json/add/core.rb","lib/json/add/core.rb","lib/json/add/rails.rb","lib/json/add/core.rb","ext/json/ext/generator/generator.c","json","json::editor","json::editor","json::editor","json::editor::gtk","json::editor","json::editor","json::editor","json::editor","json::editor","json","json::ext","json::ext::generator","json::ext::generator::generatormethods","json::ext::generator::generatormethods","json::ext::generator::generatormethods","json::ext::generator::generatormethods","json::ext::generator::generatormethods","json::ext::generator::generatormethods","json::ext::generator::generatormethods","json::ext::generator::generatormethods","json::ext::generator::generatormethods","json::ext::generator::generatormethods::string","json::ext::generator::generatormethods","json::ext::generator","json::ext","json","json","json","json","json","json","json","json::pure","json::pure::generator","json::pure::generator::generatormethods","json::pure::generator::generatormethods","json::pure::generator::generatormethods","json::pure::generator::generatormethods","json::pure::generator::generatormethods","json::pure::generator::generatormethods","json::pure::generator::generatormethods","json::pure::generator::generatormethods","json::pure::generator::generatormethods::string","json::pure::generator::generatormethods","json::pure::generator","json::pure","lib/json/common.rb","lib/json/add/rails.rb","lib/json/add/core.rb","lib/json/add/core.rb","lib/json/add/core.rb","lib/json/add/core.rb","lib/json/add/core.rb","json","json::ext::generator::state","json::pure::generator::state","json::editor::menuextension","json::editor::menuextension","json::ext::generator::state","json::pure::generator::state","json::editor::popupmenu","json::ext::generator::state","json::ext::generator::state","json::ext::generator::state","json::pure::generator::state","json::editor::jsontreeview","json::editor::jsontreeview","json::editor::jsontreeview","json::editor::mainwindow","json::editor::jsontreeview","json::editor::mainwindow","json::editor::mainwindow","json::editor::popupmenu","json::ext::generator::state","json::pure::generator::state","json::editor::mainwindow","json::editor::popupmenu","json::editor::optionsmenu","json::ext::generator::state","json::pure::generator::state","json::editor::gtk::treeiter","json::editor::gtk::treeiter","json::editor::editmenu","json::editor::popupmenu","json::editor::editmenu","json::editor::filemenu","json::editor::menuextension","json::editor::optionsmenu","json::editor::popupmenu","json::editor::mainwindow","json::editor::jsontreeview","json::editor::popupmenu","json::editor","json::editor::mainwindow","json::editor::mainwindow","json","json::editor::gtk::treeiter","json::editor","json::editor::mainwindow","json::editor","json::editor::jsontreeview","json","json::editor","json::editor::mainwindow","json::editor::mainwindow","json::editor::mainwindow","json::editor::editmenu","json::editor::editmenu","json::ext::generator::state","json::pure::generator::state","json","json::ext::generator::state","json::pure::generator::state","json","json::ext::generator::generatormethods::string","json::pure::generator::generatormethods::string","json::ext::generator::state","json::ext::generator::state","json::ext::generator::state","json::editor::popupmenu","class","date","datetime","exception","json::ext::generator::generatormethods::string::extend","json::pure::generator::generatormethods::string::extend","object","range","regexp","struct","symbol","time","json","json::editor::mainwindow","json::editor::mainwindow","json::editor::mainwindow","json::ext::generator::state","json::ext::generator::state","json::editor::menuextension","json::editor","json::editor::filemenu","json::editor::jsontreeview","json::editor::mainwindow","json::editor::menuextension","json::ext::generator::state","json::ext::parser","json::pure::generator::state","json::pure::parser","json::ext::generator::state","json::ext::generator::state","json::editor::filemenu","json::editor::filemenu","json","json::ext::parser","json::pure::parser","json","json::editor::editmenu","json::editor::popupmenu","json::editor::popupmenu","json","json::editor::optionsmenu","json::editor","json::editor::filemenu","json::editor::mainwindow","json::editor::mainwindow","json","json::editor::gtk::treeiter","json::editor::gtk::treeiter","json","json::editor::filemenu","json::editor::filemenu","json::editor::filemenu","json::editor::mainwindow","json::editor::editmenu","json::ext::parser","json::ext::generator::state","json::ext::generator::state","json::ext::generator::state","json::ext::generator::state","json::editor","json::editor::mainwindow","json::ext::generator::state","json::pure::generator::state","date","datetime","enumerable","exception","json::ext::generator::generatormethods::array","json::ext::generator::generatormethods::bignum","json::ext::generator::generatormethods::falseclass","json::ext::generator::generatormethods::fixnum","json::ext::generator::generatormethods::float","json::ext::generator::generatormethods::hash","json::ext::generator::generatormethods::nilclass","json::ext::generator::generatormethods::object","json::ext::generator::generatormethods::string","json::ext::generator::generatormethods::trueclass","json::pure::generator::generatormethods::array","json::pure::generator::generatormethods::falseclass","json::pure::generator::generatormethods::float","json::pure::generator::generatormethods::hash","json::pure::generator::generatormethods::integer","json::pure::generator::generatormethods::nilclass","json::pure::generator::generatormethods::object","json::pure::generator::generatormethods::string","json::pure::generator::generatormethods::string","json::pure::generator::generatormethods::trueclass","object","range","regexp","struct","symbol","symbol","time","json::ext::generator::generatormethods::string","json::pure::generator::generatormethods::string","json::ext::generator::generatormethods::string","json::pure::generator::generatormethods::string","json::editor::gtk::treeiter","json::editor::gtk::treeiter","json::editor::mainwindow","json::editor::mainwindow","files/readme.html","files/ext/json/ext/generator/generator_c.html","files/ext/json/ext/parser/parser_c.html","files/lib/json_rb.html","files/lib/json/add/core_rb.html","files/lib/json/add/rails_rb.html","files/lib/json/common_rb.html","files/lib/json/editor_rb.html","files/lib/json/ext_rb.html","files/lib/json/pure_rb.html","files/lib/json/pure/generator_rb.html","files/lib/json/pure/parser_rb.html","files/lib/json/version_rb.html"],"info":[["Class","lib/json/common.rb","classes/Class.html"," < Object","",1],["Date","lib/json/add/core.rb","classes/Date.html"," < Object","",1],["DateTime","lib/json/add/core.rb","classes/DateTime.html"," < Object","",1],["Enumerable","lib/json/add/rails.rb","classes/Enumerable.html"," < ","",1],["Exception","lib/json/add/core.rb","classes/Exception.html"," < Object","",1],["JSON","lib/json.rb","classes/JSON.html"," < ","",1],["Editor","JSON","classes/JSON/Editor.html"," < ","",1],["EditMenu","JSON::Editor","classes/JSON/Editor/EditMenu.html"," < Object","This class creates the Edit pulldown menu.",1],["FileMenu","JSON::Editor","classes/JSON/Editor/FileMenu.html"," < Object","This class creates the File pulldown menu.",1],["Gtk","JSON::Editor","classes/JSON/Editor/Gtk.html"," < ","",1],["TreeIter","JSON::Editor::Gtk","classes/JSON/Editor/Gtk/TreeIter.html"," < Object","The Gtk::TreeIter class is reopened and some auxiliary methods are added.",1],["JSONTreeView","JSON::Editor","classes/JSON/Editor/JSONTreeView.html"," < Gtk::TreeView","This class inherits from Gtk::TreeView, to configure it and to add a lot of behaviour to it.",1],["MainWindow","JSON::Editor","classes/JSON/Editor/MainWindow.html"," < Gtk::Window","The editor main window",1],["MenuExtension","JSON::Editor","classes/JSON/Editor/MenuExtension.html"," < ","This module bundles some method, that can be used to create a menu. It should be included into the class",1],["OptionsMenu","JSON::Editor","classes/JSON/Editor/OptionsMenu.html"," < Object","",1],["PopUpMenu","JSON::Editor","classes/JSON/Editor/PopUpMenu.html"," < Object","This class creates the popup menu, that opens when clicking onto the treeview.",1],["Ext","JSON","classes/JSON/Ext.html"," < ","This module holds all the modules/classes that implement JSON's functionality as C extensions.",1],["Generator","JSON::Ext","classes/JSON/Ext/Generator.html"," < ","This is the JSON generator implemented as a C extension. It can be configured to be used by setting ",1],["GeneratorMethods","JSON::Ext::Generator","classes/JSON/Ext/Generator/GeneratorMethods.html"," < ","",1],["Array","JSON::Ext::Generator::GeneratorMethods","classes/JSON/Ext/Generator/GeneratorMethods/Array.html"," < ","",1],["Bignum","JSON::Ext::Generator::GeneratorMethods","classes/JSON/Ext/Generator/GeneratorMethods/Bignum.html"," < ","",1],["FalseClass","JSON::Ext::Generator::GeneratorMethods","classes/JSON/Ext/Generator/GeneratorMethods/FalseClass.html"," < ","",1],["Fixnum","JSON::Ext::Generator::GeneratorMethods","classes/JSON/Ext/Generator/GeneratorMethods/Fixnum.html"," < ","",1],["Float","JSON::Ext::Generator::GeneratorMethods","classes/JSON/Ext/Generator/GeneratorMethods/Float.html"," < ","",1],["Hash","JSON::Ext::Generator::GeneratorMethods","classes/JSON/Ext/Generator/GeneratorMethods/Hash.html"," < ","",1],["NilClass","JSON::Ext::Generator::GeneratorMethods","classes/JSON/Ext/Generator/GeneratorMethods/NilClass.html"," < ","",1],["Object","JSON::Ext::Generator::GeneratorMethods","classes/JSON/Ext/Generator/GeneratorMethods/Object.html"," < ","",1],["String","JSON::Ext::Generator::GeneratorMethods","classes/JSON/Ext/Generator/GeneratorMethods/String.html"," < ","",1],["Extend","JSON::Ext::Generator::GeneratorMethods::String","classes/JSON/Ext/Generator/GeneratorMethods/String/Extend.html"," < ","",1],["TrueClass","JSON::Ext::Generator::GeneratorMethods","classes/JSON/Ext/Generator/GeneratorMethods/TrueClass.html"," < ","",1],["State","JSON::Ext::Generator","classes/JSON/Ext/Generator/State.html"," < Object","",1],["Parser","JSON::Ext","classes/JSON/Ext/Parser.html"," < Object","This is the JSON parser implemented as a C extension. It can be configured to be used by setting   JSON.parser",1],["GeneratorError","JSON","classes/JSON/GeneratorError.html"," < JSON::JSONError","This exception is raised, if a generator or unparser error occurs.",1],["GeneratorError","JSON","classes/JSON/GeneratorError.html"," < JSON::JSONError","This exception is raised, if a generator or unparser error occurs.",1],["JSONError","JSON","classes/JSON/JSONError.html"," < StandardError","The base exception for JSON errors.",1],["MissingUnicodeSupport","JSON","classes/JSON/MissingUnicodeSupport.html"," < JSON::JSONError","This exception is raised, if the required unicode support is missing on the system. Usually this means,",1],["NestingError","JSON","classes/JSON/NestingError.html"," < JSON::ParserError","This exception is raised, if the nesting of parsed datastructures is too deep.",1],["ParserError","JSON","classes/JSON/ParserError.html"," < JSON::JSONError","This exception is raised, if a parser error occurs.",1],["Pure","JSON","classes/JSON/Pure.html"," < ","This module holds all the modules/classes that implement JSON's functionality in pure ruby.",1],["Generator","JSON::Pure","classes/JSON/Pure/Generator.html"," < ","",1],["GeneratorMethods","JSON::Pure::Generator","classes/JSON/Pure/Generator/GeneratorMethods.html"," < ","",1],["Array","JSON::Pure::Generator::GeneratorMethods","classes/JSON/Pure/Generator/GeneratorMethods/Array.html"," < ","",1],["FalseClass","JSON::Pure::Generator::GeneratorMethods","classes/JSON/Pure/Generator/GeneratorMethods/FalseClass.html"," < ","",1],["Float","JSON::Pure::Generator::GeneratorMethods","classes/JSON/Pure/Generator/GeneratorMethods/Float.html"," < ","",1],["Hash","JSON::Pure::Generator::GeneratorMethods","classes/JSON/Pure/Generator/GeneratorMethods/Hash.html"," < ","",1],["Integer","JSON::Pure::Generator::GeneratorMethods","classes/JSON/Pure/Generator/GeneratorMethods/Integer.html"," < ","",1],["NilClass","JSON::Pure::Generator::GeneratorMethods","classes/JSON/Pure/Generator/GeneratorMethods/NilClass.html"," < ","",1],["Object","JSON::Pure::Generator::GeneratorMethods","classes/JSON/Pure/Generator/GeneratorMethods/Object.html"," < ","",1],["String","JSON::Pure::Generator::GeneratorMethods","classes/JSON/Pure/Generator/GeneratorMethods/String.html"," < ","",1],["Extend","JSON::Pure::Generator::GeneratorMethods::String","classes/JSON/Pure/Generator/GeneratorMethods/String/Extend.html"," < ","Module that holds the extinding methods if, the String module is included.",1],["TrueClass","JSON::Pure::Generator::GeneratorMethods","classes/JSON/Pure/Generator/GeneratorMethods/TrueClass.html"," < ","",1],["State","JSON::Pure::Generator","classes/JSON/Pure/Generator/State.html"," < Object","This class is used to create State instances, that are use to hold data while generating a JSON text",1],["Parser","JSON::Pure","classes/JSON/Pure/Parser.html"," < StringScanner","This class implements the JSON parser that is used to parse a JSON string into a Ruby data structure.",1],["Kernel","lib/json/common.rb","classes/Kernel.html"," < ","",1],["Object","lib/json/add/rails.rb","classes/Object.html"," < Object","",1],["Range","lib/json/add/core.rb","classes/Range.html"," < Object","",1],["Regexp","lib/json/add/core.rb","classes/Regexp.html"," < Object","",1],["Struct","lib/json/add/core.rb","classes/Struct.html"," < Object","",1],["Symbol","lib/json/add/rails.rb","classes/Symbol.html"," < Object","",1],["Time","lib/json/add/core.rb","classes/Time.html"," < Object","",1],["[]","JSON","classes/JSON.html#method-c-%5B%5D","(object, opts = {})","If _object_ is string-like parse the string and return the parsed result as a Ruby data structure. Otherwise",2],["[]","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-i-%5B%5D","(p1)","Return the value returned by method +name+.",2],["[]","JSON::Pure::Generator::State","classes/JSON/Pure/Generator/State.html#method-i-%5B%5D","(name)","Return the value returned by method +name+.",2],["add_item","JSON::Editor::MenuExtension","classes/JSON/Editor/MenuExtension.html#method-i-add_item","(label, keyval = nil, klass = MenuItem, &callback)","Adds a Gtk::MenuItem to this instance's #menu. _label_ is the label string, _klass_ is the item type,",2],["add_separator","JSON::Editor::MenuExtension","classes/JSON/Editor/MenuExtension.html#method-i-add_separator","()","Adds a Gtk::SeparatorMenuItem to this instance's #menu.",2],["allow_nan?","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-i-allow_nan%3F","()","Returns true, if NaN, Infinity, and -Infinity should be generated, otherwise returns false.",2],["allow_nan?","JSON::Pure::Generator::State","classes/JSON/Pure/Generator/State.html#method-i-allow_nan%3F","()","Returns true if NaN, Infinity, and -Infinity should be considered as valid JSON and output.",2],["append_new_node","JSON::Editor::PopUpMenu","classes/JSON/Editor/PopUpMenu.html#method-i-append_new_node","(item)","Append a new node to the selected Hash or Array.",2],["array_nl","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-i-array_nl","()","This string is put at the end of a line that holds a JSON array.",2],["array_nl=","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-i-array_nl%3D","(p1)","This string is put at the end of a line that holds a JSON array.",2],["ascii_only?","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-i-ascii_only%3F","()","Returns true, if NaN, Infinity, and -Infinity should be generated, otherwise returns false.",2],["ascii_only?","JSON::Pure::Generator::State","classes/JSON/Pure/Generator/State.html#method-i-ascii_only%3F","()","",2],["ask_for_element","JSON::Editor::JSONTreeView","classes/JSON/Editor/JSONTreeView.html#method-i-ask_for_element","(parent = nil, default_type = nil, value_text = @content)","Ask for an element to be appended _parent_.",2],["ask_for_find_term","JSON::Editor::JSONTreeView","classes/JSON/Editor/JSONTreeView.html#method-i-ask_for_find_term","(search = nil)","Ask for a find term to search for in the tree. Returns the term as a string.",2],["ask_for_hash_pair","JSON::Editor::JSONTreeView","classes/JSON/Editor/JSONTreeView.html#method-i-ask_for_hash_pair","(parent)","Ask for a hash key, value pair to be added to the Hash node _parent_.",2],["ask_for_location","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#method-i-ask_for_location","()","Ask for location URI a to load data from. Returns the URI as a string.",2],["ask_for_order","JSON::Editor::JSONTreeView","classes/JSON/Editor/JSONTreeView.html#method-i-ask_for_order","()","Ask for an order criteria for sorting, using _x_ for the element in question. Returns the order criterium,",2],["ask_save","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#method-i-ask_save","()","Opens a dialog, asking, if changes should be saved to a file.",2],["change","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#method-i-change","()","Sets editor status to changed, to indicate that the edited data containts unsaved changes.",2],["change_node","JSON::Editor::PopUpMenu","classes/JSON/Editor/PopUpMenu.html#method-i-change_node","(item)","Change the type or content of the selected node.",2],["check_circular?","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-i-check_circular%3F","()","Returns true, if circular data structures should be checked, otherwise returns false.",2],["check_circular?","JSON::Pure::Generator::State","classes/JSON/Pure/Generator/State.html#method-i-check_circular%3F","()","Returns true, if circular data structures are checked, otherwise returns false.",2],["clear","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#method-i-clear","()","Clear the current model, after asking to save all unsaved changes.",2],["collapse_expand","JSON::Editor::PopUpMenu","classes/JSON/Editor/PopUpMenu.html#method-i-collapse_expand","(item)","Recursively collapse/expand a subtree starting from the selected node.",2],["collapsed_nodes","JSON::Editor::OptionsMenu","classes/JSON/Editor/OptionsMenu.html#method-i-collapsed_nodes","(item)","Collapse/Expand all nodes by default.",2],["configure","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-i-configure","(p1)","Configure this State instance with the Hash _opts_, and return itself.",2],["configure","JSON::Pure::Generator::State","classes/JSON/Pure/Generator/State.html#method-i-configure","(opts)","Configure this State instance with the Hash _opts_, and return itself.",2],["content","JSON::Editor::Gtk::TreeIter","classes/JSON/Editor/Gtk/TreeIter.html#method-i-content","()","Returns the content of this node.",2],["content=","JSON::Editor::Gtk::TreeIter","classes/JSON/Editor/Gtk/TreeIter.html#method-i-content%3D","(value)","Sets the content of this node to _value_.",2],["copy","JSON::Editor::EditMenu","classes/JSON/Editor/EditMenu.html#method-i-copy","(item)","Copy data from model into primary clipboard.",2],["copy_node","JSON::Editor::PopUpMenu","classes/JSON/Editor/PopUpMenu.html#method-i-copy_node","(item)","Copy the selected node and its subtree, and save it into the clipboard.",2],["create","JSON::Editor::EditMenu","classes/JSON/Editor/EditMenu.html#method-i-create","()","Create the menu.",2],["create","JSON::Editor::FileMenu","classes/JSON/Editor/FileMenu.html#method-i-create","()","Create the menu.",2],["create","JSON::Editor::MenuExtension","classes/JSON/Editor/MenuExtension.html#method-i-create","()","This method should be implemented in subclasses to create the #menu of this instance. It has to be called",2],["create","JSON::Editor::OptionsMenu","classes/JSON/Editor/OptionsMenu.html#method-i-create","()","Create the menu.",2],["create","JSON::Editor::PopUpMenu","classes/JSON/Editor/PopUpMenu.html#method-i-create","()","Create the menu.",2],["create_menu_bar","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#method-i-create_menu_bar","()","Creates the menu bar with the pulldown menus and returns it.",2],["create_node","JSON::Editor::JSONTreeView","classes/JSON/Editor/JSONTreeView.html#method-i-create_node","(parent, type, content)","Create a _type_ node with content _content_, and add it to _parent_ in the model. If _parent_ is nil,",2],["cut_node","JSON::Editor::PopUpMenu","classes/JSON/Editor/PopUpMenu.html#method-i-cut_node","(item)","Cut the selected node and its subtree, and save it into the clipboard.",2],["data2model","JSON::Editor","classes/JSON/Editor.html#method-c-data2model","(data, model = nil, parent = nil)","Convert the Ruby data structure _data_ into tree model data for Gtk and returns the whole model. If the",2],["display_status","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#method-i-display_status","(text)","Displays _text_ in the status bar.",2],["display_title","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#method-i-display_title","()","Display the new title according to the editor's current state.",2],["dump","JSON","classes/JSON.html#method-i-dump","(obj, anIO = nil, limit = nil)","Dumps _obj_ as a JSON string, i.e. calls generate on the object and returns the result.  If anIO (an",2],["each","JSON::Editor::Gtk::TreeIter","classes/JSON/Editor/Gtk/TreeIter.html#method-i-each","()","Traverse each of this Gtk::TreeIter instance's children and yield to them.",2],["edit","JSON::Editor","classes/JSON/Editor.html#method-c-edit","(json, encoding = 'utf8')","Edit the string _json_ with encoding _encoding_ in the editor.",2],["edit","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#method-i-edit","(json)","Edit the string _json_ in the editor.",2],["error_dialog","JSON::Editor","classes/JSON/Editor.html#method-c-error_dialog","(window, text)","Opens an error dialog on top of _window_ showing the error message _text_.",2],["expand_collapse","JSON::Editor::JSONTreeView","classes/JSON/Editor/JSONTreeView.html#method-i-expand_collapse","(iter)","Expand or collapse row pointed to by _iter_ according to the #expanded attribute.",2],["fast_generate","JSON","classes/JSON.html#method-i-fast_generate","(obj, opts = nil)","Generate a JSON document from the Ruby data structure _obj_ and return it. This method disables the checks",2],["fetch_icon","JSON::Editor","classes/JSON/Editor.html#method-c-fetch_icon","(name)","Returns the Gdk::Pixbuf of the icon named _name_ from the icon cache.",2],["file_open","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#method-i-file_open","(filename = nil)","Open the file _filename_ or call the #select_file method to ask for a filename.",2],["file_save","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#method-i-file_save","()","Save the current file.",2],["file_save_as","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#method-i-file_save_as","()","Save the current file as the filename ",2],["find","JSON::Editor::EditMenu","classes/JSON/Editor/EditMenu.html#method-i-find","(item)","Find a string in all nodes' contents and select the found node in the treeview.",2],["find_again","JSON::Editor::EditMenu","classes/JSON/Editor/EditMenu.html#method-i-find_again","(item)","Repeat the last search given by #find.",2],["from_state","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-c-from_state","(p1)","Creates a State object from _opts_, which ought to be Hash to create a new State instance configured",2],["from_state","JSON::Pure::Generator::State","classes/JSON/Pure/Generator/State.html#method-c-from_state","(opts)","Creates a State object from _opts_, which ought to be Hash to create a new State instance configured",2],["generate","JSON","classes/JSON.html#method-i-generate","(obj, opts = nil)","Generate a JSON document from the Ruby data structure _obj_ and return it. _state_ is * a JSON::State",2],["generate","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-i-generate","(p1)","Generates a valid JSON document from object +obj+ and returns the result. If no valid JSON document can",2],["generate","JSON::Pure::Generator::State","classes/JSON/Pure/Generator/State.html#method-i-generate","(obj)","Generates a valid JSON document from object +obj+ and returns the result. If no valid JSON document can",2],["iconv","JSON","classes/JSON.html#method-c-iconv","(to, from, string)","Shortuct for iconv.",2],["included","JSON::Ext::Generator::GeneratorMethods::String","classes/JSON/Ext/Generator/GeneratorMethods/String.html#method-c-included","(p1)","Extends _modul_ with the String::Extend module.",2],["included","JSON::Pure::Generator::GeneratorMethods::String","classes/JSON/Pure/Generator/GeneratorMethods/String.html#method-c-included","(modul)","Extends _modul_ with the String::Extend module.",2],["indent","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-i-indent","()","This string is used to indent levels in the JSON text.",2],["indent=","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-i-indent%3D","(p1)","This string is used to indent levels in the JSON text.",2],["initialize_copy","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-i-initialize_copy","(p1)","Initializes this object from orig if it to be duplicated/cloned and returns it.",2],["insert_new_node","JSON::Editor::PopUpMenu","classes/JSON/Editor/PopUpMenu.html#method-i-insert_new_node","(item)","Insert a new node into an Array before the selected element.",2],["json_creatable?","Class","classes/Class.html#method-i-json_creatable%3F","()","Returns true, if this class can be used to create an instance from a serialised JSON string. The class",2],["json_create","Date","classes/Date.html#method-c-json_create","(object)","",2],["json_create","DateTime","classes/DateTime.html#method-c-json_create","(object)","",2],["json_create","Exception","classes/Exception.html#method-c-json_create","(object)","",2],["json_create","JSON::Ext::Generator::GeneratorMethods::String::Extend","classes/JSON/Ext/Generator/GeneratorMethods/String/Extend.html#method-i-json_create","(p1)","Raw Strings are JSON Objects (the raw bytes are stored in an array for the key \"raw\"). The Ruby String",2],["json_create","JSON::Pure::Generator::GeneratorMethods::String::Extend","classes/JSON/Pure/Generator/GeneratorMethods/String/Extend.html#method-i-json_create","(o)","Raw Strings are JSON Objects (the raw bytes are stored in an array for the key \"raw\"). The Ruby String",2],["json_create","Object","classes/Object.html#method-c-json_create","(object)","",2],["json_create","Range","classes/Range.html#method-c-json_create","(object)","",2],["json_create","Regexp","classes/Regexp.html#method-c-json_create","(object)","",2],["json_create","Struct","classes/Struct.html#method-c-json_create","(object)","",2],["json_create","Symbol","classes/Symbol.html#method-c-json_create","(o)","",2],["json_create","Time","classes/Time.html#method-c-json_create","(object)","",2],["load","JSON","classes/JSON.html#method-i-load","(source, proc = nil)","Load a ruby data structure from a JSON _source_ and return it. A source can either be a string-like object,",2],["load_file","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#method-i-load_file","(filename)","Load the file named _filename_ into the editor as a JSON document.",2],["load_location","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#method-i-load_location","(uri)","Load the data at location _uri_ into the editor as a JSON document.",2],["location_open","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#method-i-location_open","(uri = nil)","Open the data at the location _uri_, if given. Otherwise open a dialog to ask for the _uri_.",2],["max_nesting","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-i-max_nesting","()","This integer returns the maximum level of data structure nesting in the generated JSON, max_nesting =",2],["max_nesting=","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-i-max_nesting%3D","(p1)","This sets the maximum level of data structure nesting in the generated JSON to the integer depth, max_nesting",2],["method_missing","JSON::Editor::MenuExtension","classes/JSON/Editor/MenuExtension.html#method-i-method_missing","(*a, &b)","",2],["model2data","JSON::Editor","classes/JSON/Editor.html#method-c-model2data","(iter)","Convert the tree model starting from Gtk::TreeIter _iter_ into a Ruby data structure and return it.",2],["new","JSON::Editor::FileMenu","classes/JSON/Editor/FileMenu.html#method-i-new","(item)","Clear the model and filename, but ask to save the JSON document, if unsaved changes have occured.",2],["new","JSON::Editor::JSONTreeView","classes/JSON/Editor/JSONTreeView.html#method-c-new","(window)","Creates a JSONTreeView instance, the parameter _window_ is a MainWindow instance and used for self delegation.",2],["new","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#method-c-new","(encoding)","",2],["new","JSON::Editor::MenuExtension","classes/JSON/Editor/MenuExtension.html#method-c-new","(treeview)","Creates a Menu, that includes MenuExtension. _treeview_ is the Gtk::TreeView, on which it operates.",2],["new","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-c-new","(...)","Instantiates a new State object, configured by _opts_.  _opts_ can have the following keys:  * *indent*:",2],["new","JSON::Ext::Parser","classes/JSON/Ext/Parser.html#method-c-new","(...)","Creates a new JSON::Ext::Parser instance for the string _source_.  Creates a new JSON::Ext::Parser instance",2],["new","JSON::Pure::Generator::State","classes/JSON/Pure/Generator/State.html#method-c-new","(opts = {})","Instantiates a new State object, configured by _opts_.  _opts_ can have the following keys:  * *indent*:",2],["new","JSON::Pure::Parser","classes/JSON/Pure/Parser.html#method-c-new","(source, opts = {})","Creates a new JSON::Pure::Parser instance for the string _source_.  It will be configured by the _opts_",2],["object_nl","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-i-object_nl","()","This string is put at the end of a line that holds a JSON object (or Hash).",2],["object_nl=","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-i-object_nl%3D","(p1)","This string is put at the end of a line that holds a JSON object (or Hash).",2],["open","JSON::Editor::FileMenu","classes/JSON/Editor/FileMenu.html#method-i-open","(item)","Open a file and load it into the editor. Ask to save the JSON document first, if unsaved changes have",2],["open_location","JSON::Editor::FileMenu","classes/JSON/Editor/FileMenu.html#method-i-open_location","(item)","",2],["parse","JSON","classes/JSON.html#method-i-parse","(source, opts = {})","Parse the JSON document _source_ into a Ruby data structure and return it.  _opts_ can have the following",2],["parse","JSON::Ext::Parser","classes/JSON/Ext/Parser.html#method-i-parse","()","Parses the current JSON text _source_ and returns the complete data structure as a result.",2],["parse","JSON::Pure::Parser","classes/JSON/Pure/Parser.html#method-i-parse","()","Parses the current JSON string _source_ and returns the complete data structure as a result.",2],["parse!","JSON","classes/JSON.html#method-i-parse%21","(source, opts = {})","Parse the JSON document _source_ into a Ruby data structure and return it. The bang version of the parse",2],["paste","JSON::Editor::EditMenu","classes/JSON/Editor/EditMenu.html#method-i-paste","(item)","Copy json text from primary clipboard into model.",2],["paste_node_appending","JSON::Editor::PopUpMenu","classes/JSON/Editor/PopUpMenu.html#method-i-paste_node_appending","(item)","Paste the data in the clipboard into the selected Array or Hash by appending it.",2],["paste_node_inserting_before","JSON::Editor::PopUpMenu","classes/JSON/Editor/PopUpMenu.html#method-i-paste_node_inserting_before","(item)","Paste the data in the clipboard into the selected Array inserting it before the selected element.",2],["pretty_generate","JSON","classes/JSON.html#method-i-pretty_generate","(obj, opts = nil)","Generate a JSON document from the Ruby data structure _obj_ and return it. The returned document is a",2],["pretty_saving","JSON::Editor::OptionsMenu","classes/JSON/Editor/OptionsMenu.html#method-i-pretty_saving","(item)","Toggle pretty saving mode on/off.",2],["question_dialog","JSON::Editor","classes/JSON/Editor.html#method-c-question_dialog","(window, text)","Opens a yes/no question dialog on top of _window_ showing the error message _text_. If yes was answered",2],["quit","JSON::Editor::FileMenu","classes/JSON/Editor/FileMenu.html#method-i-quit","(item)","Quit the editor, after asking to save any unsaved changes first.",2],["quit","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#method-i-quit","()","Quit this editor, that is, leave this editor's main loop.",2],["read_data","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#method-i-read_data","(filename)","Read a JSON document from the file named _filename_, parse it into a ruby data structure, and return",2],["recurse_proc","JSON","classes/JSON.html#method-i-recurse_proc","(result, &proc)","",2],["recursive_each","JSON::Editor::Gtk::TreeIter","classes/JSON/Editor/Gtk/TreeIter.html#method-i-recursive_each","(&block)","Recursively traverse all nodes of this Gtk::TreeIter's subtree (including self) and yield to them.",2],["remove_subtree","JSON::Editor::Gtk::TreeIter","classes/JSON/Editor/Gtk/TreeIter.html#method-i-remove_subtree","(model)","Remove the subtree of this Gtk::TreeIter instance from the model _model_.",2],["restore","JSON","classes/JSON.html#method-c-restore","(source, proc = nil)","",2],["revert","JSON::Editor::FileMenu","classes/JSON/Editor/FileMenu.html#method-i-revert","(item)","Revert the current JSON document in the editor to the saved version.",2],["save","JSON::Editor::FileMenu","classes/JSON/Editor/FileMenu.html#method-i-save","(item)","Save the current JSON document.",2],["save_as","JSON::Editor::FileMenu","classes/JSON/Editor/FileMenu.html#method-i-save_as","(item)","Save the current JSON document under the given filename.",2],["select_file","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#method-i-select_file","(message)","Open a file selecton dialog, displaying _message_, and return the selected filename or nil, if no file",2],["sort","JSON::Editor::EditMenu","classes/JSON/Editor/EditMenu.html#method-i-sort","(item)","Sort (Reverse sort) all elements of the selected array by the given expression. _x_ is the element in",2],["source","JSON::Ext::Parser","classes/JSON/Ext/Parser.html#method-i-source","()","Returns a copy of the current _source_ string, that was used to construct this Parser.",2],["space","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-i-space","()","This string is used to insert a space between the tokens in a JSON string.",2],["space=","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-i-space%3D","(p1)","This string is used to insert a space between the tokens in a JSON string.",2],["space_before","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-i-space_before","()","This string is used to insert a space before the ':' in JSON objects.",2],["space_before=","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-i-space_before%3D","(p1)","This string is used to insert a space before the ':' in JSON objects.",2],["start","JSON::Editor","classes/JSON/Editor.html#method-c-start","(encoding = 'utf8')","Starts a JSON Editor. If a block was given, it yields to the JSON::Editor::MainWindow instance.",2],["store_file","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#method-i-store_file","(path)","Store the current JSON document to _path_.",2],["to_h","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#method-i-to_h","()","Returns the configuration instance variables as a hash, that can be passed to the configure method.",2],["to_h","JSON::Pure::Generator::State","classes/JSON/Pure/Generator/State.html#method-i-to_h","()","Returns the configuration instance variables as a hash, that can be passed to the configure method.",2],["to_json","Date","classes/Date.html#method-i-to_json","(*args)","",2],["to_json","DateTime","classes/DateTime.html#method-i-to_json","(*args)","",2],["to_json","Enumerable","classes/Enumerable.html#method-i-to_json","(*a)","",2],["to_json","Exception","classes/Exception.html#method-i-to_json","(*args)","",2],["to_json","JSON::Ext::Generator::GeneratorMethods::Array","classes/JSON/Ext/Generator/GeneratorMethods/Array.html#method-i-to_json","(...)","Returns a JSON string containing a JSON array, that is generated from this Array instance. _state_ is",2],["to_json","JSON::Ext::Generator::GeneratorMethods::Bignum","classes/JSON/Ext/Generator/GeneratorMethods/Bignum.html#method-i-to_json","(...)","Returns a JSON string representation for this Integer number.",2],["to_json","JSON::Ext::Generator::GeneratorMethods::FalseClass","classes/JSON/Ext/Generator/GeneratorMethods/FalseClass.html#method-i-to_json","(...)","Returns a JSON string for false: 'false'.",2],["to_json","JSON::Ext::Generator::GeneratorMethods::Fixnum","classes/JSON/Ext/Generator/GeneratorMethods/Fixnum.html#method-i-to_json","(...)","Returns a JSON string representation for this Integer number.",2],["to_json","JSON::Ext::Generator::GeneratorMethods::Float","classes/JSON/Ext/Generator/GeneratorMethods/Float.html#method-i-to_json","(...)","Returns a JSON string representation for this Float number.",2],["to_json","JSON::Ext::Generator::GeneratorMethods::Hash","classes/JSON/Ext/Generator/GeneratorMethods/Hash.html#method-i-to_json","(...)","Returns a JSON string containing a JSON object, that is generated from this Hash instance. _state_ is",2],["to_json","JSON::Ext::Generator::GeneratorMethods::NilClass","classes/JSON/Ext/Generator/GeneratorMethods/NilClass.html#method-i-to_json","(...)","",2],["to_json","JSON::Ext::Generator::GeneratorMethods::Object","classes/JSON/Ext/Generator/GeneratorMethods/Object.html#method-i-to_json","(...)","Converts this object to a string (calling #to_s), converts it to a JSON string, and returns the result.",2],["to_json","JSON::Ext::Generator::GeneratorMethods::String","classes/JSON/Ext/Generator/GeneratorMethods/String.html#method-i-to_json","(...)","This string should be encoded with UTF-8 A call to this method returns a JSON string encoded with UTF16",2],["to_json","JSON::Ext::Generator::GeneratorMethods::TrueClass","classes/JSON/Ext/Generator/GeneratorMethods/TrueClass.html#method-i-to_json","(...)","Returns a JSON string for true: 'true'.",2],["to_json","JSON::Pure::Generator::GeneratorMethods::Array","classes/JSON/Pure/Generator/GeneratorMethods/Array.html#method-i-to_json","(state = nil, depth = 0, *)","Returns a JSON string containing a JSON array, that is unparsed from this Array instance. _state_ is",2],["to_json","JSON::Pure::Generator::GeneratorMethods::FalseClass","classes/JSON/Pure/Generator/GeneratorMethods/FalseClass.html#method-i-to_json","(*)","Returns a JSON string for false: 'false'.",2],["to_json","JSON::Pure::Generator::GeneratorMethods::Float","classes/JSON/Pure/Generator/GeneratorMethods/Float.html#method-i-to_json","(state = nil, *)","Returns a JSON string representation for this Float number.",2],["to_json","JSON::Pure::Generator::GeneratorMethods::Hash","classes/JSON/Pure/Generator/GeneratorMethods/Hash.html#method-i-to_json","(state = nil, depth = 0, *)","Returns a JSON string containing a JSON object, that is unparsed from this Hash instance. _state_ is",2],["to_json","JSON::Pure::Generator::GeneratorMethods::Integer","classes/JSON/Pure/Generator/GeneratorMethods/Integer.html#method-i-to_json","(*)","Returns a JSON string representation for this Integer number.",2],["to_json","JSON::Pure::Generator::GeneratorMethods::NilClass","classes/JSON/Pure/Generator/GeneratorMethods/NilClass.html#method-i-to_json","(*)","Returns a JSON string for nil: 'null'.",2],["to_json","JSON::Pure::Generator::GeneratorMethods::Object","classes/JSON/Pure/Generator/GeneratorMethods/Object.html#method-i-to_json","(*)","Converts this object to a string (calling #to_s), converts it to a JSON string, and returns the result.",2],["to_json","JSON::Pure::Generator::GeneratorMethods::String","classes/JSON/Pure/Generator/GeneratorMethods/String.html#method-i-to_json","(*args)","This string should be encoded with UTF-8 A call to this method returns a JSON string encoded with UTF16",2],["to_json","JSON::Pure::Generator::GeneratorMethods::String","classes/JSON/Pure/Generator/GeneratorMethods/String.html#method-i-to_json","(*args)","This string should be encoded with UTF-8 A call to this method returns a JSON string encoded with UTF16",2],["to_json","JSON::Pure::Generator::GeneratorMethods::TrueClass","classes/JSON/Pure/Generator/GeneratorMethods/TrueClass.html#method-i-to_json","(*)","Returns a JSON string for true: 'true'.",2],["to_json","Object","classes/Object.html#method-i-to_json","(*a)","",2],["to_json","Range","classes/Range.html#method-i-to_json","(*args)","",2],["to_json","Regexp","classes/Regexp.html#method-i-to_json","(*)","",2],["to_json","Struct","classes/Struct.html#method-i-to_json","(*args)","",2],["to_json","Symbol","classes/Symbol.html#method-i-to_json","(*a)","",2],["to_json","Symbol","classes/Symbol.html#method-i-to_json","(*a)","",2],["to_json","Time","classes/Time.html#method-i-to_json","(*args)","",2],["to_json_raw","JSON::Ext::Generator::GeneratorMethods::String","classes/JSON/Ext/Generator/GeneratorMethods/String.html#method-i-to_json_raw","(...)","This method creates a JSON text from the result of a call to to_json_raw_object of this String.",2],["to_json_raw","JSON::Pure::Generator::GeneratorMethods::String","classes/JSON/Pure/Generator/GeneratorMethods/String.html#method-i-to_json_raw","(*args)","This method creates a JSON text from the result of a call to to_json_raw_object of this String.",2],["to_json_raw_object","JSON::Ext::Generator::GeneratorMethods::String","classes/JSON/Ext/Generator/GeneratorMethods/String.html#method-i-to_json_raw_object","()","This method creates a raw object hash, that can be nested into other data structures and will be generated",2],["to_json_raw_object","JSON::Pure::Generator::GeneratorMethods::String","classes/JSON/Pure/Generator/GeneratorMethods/String.html#method-i-to_json_raw_object","()","This method creates a raw object hash, that can be nested into other data structures and will be unparsed",2],["type","JSON::Editor::Gtk::TreeIter","classes/JSON/Editor/Gtk/TreeIter.html#method-i-type","()","Returns the type of this node.",2],["type=","JSON::Editor::Gtk::TreeIter","classes/JSON/Editor/Gtk/TreeIter.html#method-i-type%3D","(value)","Sets the type of this node to _value_. This implies setting the respective icon accordingly.",2],["unchange","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#method-i-unchange","()","Sets editor status to unchanged, to indicate that the edited data doesn't containt unsaved changes.",2],["view_new_model","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#method-i-view_new_model","(model)","Puts a new model _model_ into the Gtk::TreeView to be edited.",2],["README","files/README.html","files/README.html","","== Description  This is a implementation of the JSON specification according to RFC 4627 http://www.ietf.org/rfc/rfc4627.txt",3],["generator.c","files/ext/json/ext/generator/generator_c.html","files/ext/json/ext/generator/generator_c.html","","",3],["parser.c","files/ext/json/ext/parser/parser_c.html","files/ext/json/ext/parser/parser_c.html","","",3],["json.rb","files/lib/json_rb.html","files/lib/json_rb.html","","",3],["core.rb","files/lib/json/add/core_rb.html","files/lib/json/add/core_rb.html","","This file contains implementations of ruby core's custom objects for serialisation/deserialisation.",3],["rails.rb","files/lib/json/add/rails_rb.html","files/lib/json/add/rails_rb.html","","This file contains implementations of rails custom objects for serialisation/deserialisation.",3],["common.rb","files/lib/json/common_rb.html","files/lib/json/common_rb.html","","",3],["editor.rb","files/lib/json/editor_rb.html","files/lib/json/editor_rb.html","","To use the GUI JSON editor, start the edit_json.rb executable script. It requires ruby-gtk to be installed.",3],["ext.rb","files/lib/json/ext_rb.html","files/lib/json/ext_rb.html","","",3],["pure.rb","files/lib/json/pure_rb.html","files/lib/json/pure_rb.html","","",3],["generator.rb","files/lib/json/pure/generator_rb.html","files/lib/json/pure/generator_rb.html","","",3],["parser.rb","files/lib/json/pure/parser_rb.html","files/lib/json/pure/parser_rb.html","","",3],["version.rb","files/lib/json/version_rb.html","files/lib/json/version_rb.html","","",3]]}}
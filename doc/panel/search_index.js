var search_data = {"index":{"searchIndex":["class","date","datetime","exception","json","editor","editmenu","filemenu","gtk","treeiter","jsontreeview","mainwindow","menuextension","optionsmenu","popupmenu","ext","generator","generatormethods","array","bignum","falseclass","fixnum","float","hash","nilclass","object","string","extend","trueclass","state","parser","generatorerror","jsonerror","missingunicodesupport","nestingerror","parsererror","pure","generator","generatormethods","array","falseclass","float","hash","integer","nilclass","object","string","extend","trueclass","state","parser","kernel","object","range","regexp","struct","symbol","time","[]()","[]()","[]()","add_item()","add_separator()","allow_nan?()","allow_nan?()","append_new_node()","array_nl()","array_nl=()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","ascii_only?()","ascii_only?()","ask_for_element()","ask_for_find_term()","ask_for_hash_pair()","ask_for_location()","ask_for_order()","ask_save()","change()","change_node()","check_circular?()","check_circular?()","clear()","collapse_expand()","collapsed_nodes()","configure()","configure()","const_defined_in?()","const_defined_in?()","content()","content=()","copy()","copy_node()","create()","create()","create()","create()","create()","create_menu_bar()","create_node()","cut_node()","data2model()","depth()","depth=()","display_status()","display_title()","dump()","each()","edit()","edit()","error_dialog()","expand_collapse()","fast_generate()","fetch_icon()","file_open()","file_save()","file_save_as()","find()","find_again()","from_state()","from_state()","generate()","generate()","generate()","iconv()","iconv()","included()","included()","indent()","indent=()","initialize_copy()","insert_new_node()","json/common()","json_creatable?()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","load()","load_file()","load_location()","location_open()","max_nesting()","max_nesting=()","merge()","merge()","method_missing()","model2data()","new()","new()","new()","new()","new()","new()","new()","new()","object_nl()","object_nl=()","open()","open_location()","parse()","parse()","parse()","parse!()","paste()","paste_node_appending()","paste_node_inserting_before()","pretty_generate()","pretty_saving()","question_dialog()","quit()","quit()","read_data()","recurse_proc()","recursive_each()","remove_subtree()","restore()","revert()","save()","save_as()","select_file()","sort()","source()","space()","space=()","space_before()","space_before=()","start()","store_file()","to_h()","to_h()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json_raw()","to_json_raw()","to_json_raw_object()","to_json_raw_object()","type()","type=()","unchange()","view_new_model()","readme.rdoc","generator.c","parser.c","json.rb","core.rb","rails.rb","common.rb","editor.rb","ext.rb","pure.rb","generator.rb","parser.rb","version.rb"],"longSearchIndex":["lib/json/common.rb","lib/json/add/core.rb","lib/json/add/core.rb","lib/json/add/core.rb","ext/json/ext/parser/parser.c","json","json::editor","json::editor","json::editor","json::editor::gtk","json::editor","json::editor","json::editor","json::editor","json::editor","json","json::ext","json::ext::generator","json::ext::generator::generatormethods","json::ext::generator::generatormethods","json::ext::generator::generatormethods","json::ext::generator::generatormethods","json::ext::generator::generatormethods","json::ext::generator::generatormethods","json::ext::generator::generatormethods","json::ext::generator::generatormethods","json::ext::generator::generatormethods","json::ext::generator::generatormethods::string","json::ext::generator::generatormethods","json::ext::generator","json::ext","json","json","json","json","json","json","json::pure","json::pure::generator","json::pure::generator::generatormethods","json::pure::generator::generatormethods","json::pure::generator::generatormethods","json::pure::generator::generatormethods","json::pure::generator::generatormethods","json::pure::generator::generatormethods","json::pure::generator::generatormethods","json::pure::generator::generatormethods","json::pure::generator::generatormethods::string","json::pure::generator::generatormethods","json::pure::generator","json::pure","lib/json/common.rb","lib/json.rb","lib/json/add/core.rb","lib/json/add/core.rb","lib/json/add/core.rb","lib/json/add/core.rb","lib/json/add/core.rb","json","json::ext::generator::state","json::pure::generator::state","json::editor::menuextension","json::editor::menuextension","json::ext::generator::state","json::pure::generator::state","json::editor::popupmenu","json::ext::generator::state","json::ext::generator::state","date","datetime","exception","range","regexp","struct","symbol","time","json::ext::generator::state","json::pure::generator::state","json::editor::jsontreeview","json::editor::jsontreeview","json::editor::jsontreeview","json::editor::mainwindow","json::editor::jsontreeview","json::editor::mainwindow","json::editor::mainwindow","json::editor::popupmenu","json::ext::generator::state","json::pure::generator::state","json::editor::mainwindow","json::editor::popupmenu","json::editor::optionsmenu","json::ext::generator::state","json::pure::generator::state","json","json","json::editor::gtk::treeiter","json::editor::gtk::treeiter","json::editor::editmenu","json::editor::popupmenu","json::editor::editmenu","json::editor::filemenu","json::editor::menuextension","json::editor::optionsmenu","json::editor::popupmenu","json::editor::mainwindow","json::editor::jsontreeview","json::editor::popupmenu","json::editor","json::ext::generator::state","json::ext::generator::state","json::editor::mainwindow","json::editor::mainwindow","json","json::editor::gtk::treeiter","json::editor","json::editor::mainwindow","json::editor","json::editor::jsontreeview","json","json::editor","json::editor::mainwindow","json::editor::mainwindow","json::editor::mainwindow","json::editor::editmenu","json::editor::editmenu","json::ext::generator::state","json::pure::generator::state","json","json::ext::generator::state","json::pure::generator::state","json","json","json::ext::generator::generatormethods::string","json::pure::generator::generatormethods::string","json::ext::generator::state","json::ext::generator::state","json::ext::generator::state","json::editor::popupmenu","object","class","date","datetime","exception","json::ext::generator::generatormethods::string::extend","json::pure::generator::generatormethods::string::extend","range","regexp","struct","symbol","time","json","json::editor::mainwindow","json::editor::mainwindow","json::editor::mainwindow","json::ext::generator::state","json::ext::generator::state","json::ext::generator::state","json::pure::generator::state","json::editor::menuextension","json::editor","json::editor::filemenu","json::editor::jsontreeview","json::editor::mainwindow","json::editor::menuextension","json::ext::generator::state","json::ext::parser","json::pure::generator::state","json::pure::parser","json::ext::generator::state","json::ext::generator::state","json::editor::filemenu","json::editor::filemenu","json","json::ext::parser","json::pure::parser","json","json::editor::editmenu","json::editor::popupmenu","json::editor::popupmenu","json","json::editor::optionsmenu","json::editor","json::editor::filemenu","json::editor::mainwindow","json::editor::mainwindow","json","json::editor::gtk::treeiter","json::editor::gtk::treeiter","json","json::editor::filemenu","json::editor::filemenu","json::editor::filemenu","json::editor::mainwindow","json::editor::editmenu","json::ext::parser","json::ext::generator::state","json::ext::generator::state","json::ext::generator::state","json::ext::generator::state","json::editor","json::editor::mainwindow","json::ext::generator::state","json::pure::generator::state","date","datetime","exception","json::ext::generator::generatormethods::array","json::ext::generator::generatormethods::bignum","json::ext::generator::generatormethods::falseclass","json::ext::generator::generatormethods::fixnum","json::ext::generator::generatormethods::float","json::ext::generator::generatormethods::hash","json::ext::generator::generatormethods::nilclass","json::ext::generator::generatormethods::object","json::ext::generator::generatormethods::string","json::ext::generator::generatormethods::trueclass","json::pure::generator::generatormethods::array","json::pure::generator::generatormethods::falseclass","json::pure::generator::generatormethods::float","json::pure::generator::generatormethods::hash","json::pure::generator::generatormethods::integer","json::pure::generator::generatormethods::nilclass","json::pure::generator::generatormethods::object","json::pure::generator::generatormethods::string","json::pure::generator::generatormethods::string","json::pure::generator::generatormethods::trueclass","range","regexp","struct","symbol","time","json::ext::generator::generatormethods::string","json::pure::generator::generatormethods::string","json::ext::generator::generatormethods::string","json::pure::generator::generatormethods::string","json::editor::gtk::treeiter","json::editor::gtk::treeiter","json::editor::mainwindow","json::editor::mainwindow","files/readme_rdoc.html","files/ext/json/ext/generator/generator_c.html","files/ext/json/ext/parser/parser_c.html","files/lib/json_rb.html","files/lib/json/add/core_rb.html","files/lib/json/add/rails_rb.html","files/lib/json/common_rb.html","files/lib/json/editor_rb.html","files/lib/json/ext_rb.html","files/lib/json/pure_rb.html","files/lib/json/pure/generator_rb.html","files/lib/json/pure/parser_rb.html","files/lib/json/version_rb.html"],"info":[["Class","lib/json/common.rb","classes/Class.html"," < Object","Extends any Class to include _json_creatable?_ method. ",1],["Date","lib/json/add/core.rb","classes/Date.html"," < Object","Date serialization/deserialization ",1],["DateTime","lib/json/add/core.rb","classes/DateTime.html"," < Object","DateTime serialization/deserialization ",1],["Exception","lib/json/add/core.rb","classes/Exception.html"," < Object","Exception serialization/deserialization ",1],["JSON","lib/json/version.rb","classes/JSON.html"," < ","          # ---       call-seq: source()       Returns a copy of the current _source_ string, that was",1],["Editor","JSON","classes/JSON/Editor.html"," < ","",1],["EditMenu","JSON::Editor","classes/JSON/Editor/EditMenu.html"," < Object","This class creates the Edit pulldown menu. ",1],["FileMenu","JSON::Editor","classes/JSON/Editor/FileMenu.html"," < Object","This class creates the File pulldown menu. ",1],["Gtk","JSON::Editor","classes/JSON/Editor/Gtk.html"," < ","",1],["TreeIter","JSON::Editor::Gtk","classes/JSON/Editor/Gtk/TreeIter.html"," < Object","The Gtk::TreeIter class is reopened and some auxiliary methods are added. ",1],["JSONTreeView","JSON::Editor","classes/JSON/Editor/JSONTreeView.html"," < Gtk::TreeView","This class inherits from Gtk::TreeView, to configure it and to add a lot of behaviour to it. ",1],["MainWindow","JSON::Editor","classes/JSON/Editor/MainWindow.html"," < Gtk::Window","The editor main window ",1],["MenuExtension","JSON::Editor","classes/JSON/Editor/MenuExtension.html"," < ","This module bundles some method, that can be used to create a menu. It should be included into the class",1],["OptionsMenu","JSON::Editor","classes/JSON/Editor/OptionsMenu.html"," < Object","",1],["PopUpMenu","JSON::Editor","classes/JSON/Editor/PopUpMenu.html"," < Object","This class creates the popup menu, that opens when clicking onto the treeview. ",1],["Ext","JSON","classes/JSON/Ext.html"," < ","# This module holds all the modules/classes that implement JSON's # functionality as C extensions.  #",1],["Generator","JSON::Ext","classes/JSON/Ext/Generator.html"," < ","      This is the JSON generator implemented as a C extension. It can be    configured to be used by",1],["GeneratorMethods","JSON::Ext::Generator","classes/JSON/Ext/Generator/GeneratorMethods.html"," < ","         ",1],["Array","JSON::Ext::Generator::GeneratorMethods","classes/JSON/Ext/Generator/GeneratorMethods/Array.html"," < ","         ",1],["Bignum","JSON::Ext::Generator::GeneratorMethods","classes/JSON/Ext/Generator/GeneratorMethods/Bignum.html"," < ","         ",1],["FalseClass","JSON::Ext::Generator::GeneratorMethods","classes/JSON/Ext/Generator/GeneratorMethods/FalseClass.html"," < ","         ",1],["Fixnum","JSON::Ext::Generator::GeneratorMethods","classes/JSON/Ext/Generator/GeneratorMethods/Fixnum.html"," < ","         ",1],["Float","JSON::Ext::Generator::GeneratorMethods","classes/JSON/Ext/Generator/GeneratorMethods/Float.html"," < ","         ",1],["Hash","JSON::Ext::Generator::GeneratorMethods","classes/JSON/Ext/Generator/GeneratorMethods/Hash.html"," < ","         ",1],["NilClass","JSON::Ext::Generator::GeneratorMethods","classes/JSON/Ext/Generator/GeneratorMethods/NilClass.html"," < ","         ",1],["Object","JSON::Ext::Generator::GeneratorMethods","classes/JSON/Ext/Generator/GeneratorMethods/Object.html"," < ","         ",1],["String","JSON::Ext::Generator::GeneratorMethods","classes/JSON/Ext/Generator/GeneratorMethods/String.html"," < ","         ",1],["Extend","JSON::Ext::Generator::GeneratorMethods::String","classes/JSON/Ext/Generator/GeneratorMethods/String/Extend.html"," < ","         ",1],["TrueClass","JSON::Ext::Generator::GeneratorMethods","classes/JSON/Ext/Generator/GeneratorMethods/TrueClass.html"," < ","         ",1],["State","JSON::Ext::Generator","classes/JSON/Ext/Generator/State.html"," < Object","         ",1],["Parser","JSON::Ext","classes/JSON/Ext/Parser.html"," < Object","      This is the JSON parser implemented as a C extension. It can be configured    to be used by setting",1],["GeneratorError","JSON","classes/JSON/GeneratorError.html"," < JSONError","This exception is raised, if a generator or unparser error occurs. ",1],["JSONError","JSON","classes/JSON/JSONError.html"," < StandardError","The base exception for JSON errors. ",1],["MissingUnicodeSupport","JSON","classes/JSON/MissingUnicodeSupport.html"," < JSONError","This exception is raised, if the required unicode support is missing on the system. Usually this means,",1],["NestingError","JSON","classes/JSON/NestingError.html"," < ParserError","This exception is raised, if the nesting of parsed datastructures is too deep. ",1],["ParserError","JSON","classes/JSON/ParserError.html"," < JSONError","This exception is raised, if a parser error occurs. ",1],["Pure","JSON","classes/JSON/Pure.html"," < ","This module holds all the modules/classes that implement JSON's functionality in pure ruby. ",1],["Generator","JSON::Pure","classes/JSON/Pure/Generator.html"," < ","",1],["GeneratorMethods","JSON::Pure::Generator","classes/JSON/Pure/Generator/GeneratorMethods.html"," < ","",1],["Array","JSON::Pure::Generator::GeneratorMethods","classes/JSON/Pure/Generator/GeneratorMethods/Array.html"," < ","",1],["FalseClass","JSON::Pure::Generator::GeneratorMethods","classes/JSON/Pure/Generator/GeneratorMethods/FalseClass.html"," < ","",1],["Float","JSON::Pure::Generator::GeneratorMethods","classes/JSON/Pure/Generator/GeneratorMethods/Float.html"," < ","",1],["Hash","JSON::Pure::Generator::GeneratorMethods","classes/JSON/Pure/Generator/GeneratorMethods/Hash.html"," < ","",1],["Integer","JSON::Pure::Generator::GeneratorMethods","classes/JSON/Pure/Generator/GeneratorMethods/Integer.html"," < ","",1],["NilClass","JSON::Pure::Generator::GeneratorMethods","classes/JSON/Pure/Generator/GeneratorMethods/NilClass.html"," < ","",1],["Object","JSON::Pure::Generator::GeneratorMethods","classes/JSON/Pure/Generator/GeneratorMethods/Object.html"," < ","",1],["String","JSON::Pure::Generator::GeneratorMethods","classes/JSON/Pure/Generator/GeneratorMethods/String.html"," < ","",1],["Extend","JSON::Pure::Generator::GeneratorMethods::String","classes/JSON/Pure/Generator/GeneratorMethods/String/Extend.html"," < ","Module that holds the extinding methods if, the String module is included. ",1],["TrueClass","JSON::Pure::Generator::GeneratorMethods","classes/JSON/Pure/Generator/GeneratorMethods/TrueClass.html"," < ","",1],["State","JSON::Pure::Generator","classes/JSON/Pure/Generator/State.html"," < Object","This class is used to create State instances, that are use to hold data while generating a JSON text",1],["Parser","JSON::Pure","classes/JSON/Pure/Parser.html"," < StringScanner","This class implements the JSON parser that is used to parse a JSON string into a Ruby data structure.",1],["Kernel","lib/json/common.rb","classes/Kernel.html"," < ","",1],["Object","lib/json.rb","classes/Object.html"," < Object","",1],["Range","lib/json/add/core.rb","classes/Range.html"," < Object","Range serialization/deserialization ",1],["Regexp","lib/json/add/core.rb","classes/Regexp.html"," < Object","Regexp serialization/deserialization ",1],["Struct","lib/json/add/core.rb","classes/Struct.html"," < Object","Struct serialization/deserialization ",1],["Symbol","lib/json/add/core.rb","classes/Symbol.html"," < Object","Symbol serialization/deserialization ",1],["Time","lib/json/add/core.rb","classes/Time.html"," < Object","Time serialization/deserialization ",1],["[]","JSON","classes/JSON.html#M000057","(object, opts = {})","If _object_ is string-like parse the string and return the parsed result as a Ruby data structure. Otherwise",2],["[]","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000187","(p1)","        Return the value returned by method +name+.    ",2],["[]","JSON::Pure::Generator::State","classes/JSON/Pure/Generator/State.html#M000039","(name)","Return the value returned by method +name+. ",2],["add_item","JSON::Editor::MenuExtension","classes/JSON/Editor/MenuExtension.html#M000099","(label, keyval = nil, klass = MenuItem, &callback)","Adds a Gtk::MenuItem to this instance's #menu. _label_ is the label string, _klass_ is the item type,",2],["add_separator","JSON::Editor::MenuExtension","classes/JSON/Editor/MenuExtension.html#M000098","()","Adds a Gtk::SeparatorMenuItem to this instance's #menu. ",2],["allow_nan?","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000181","()","          Returns true, if NaN, Infinity, and -Infinity should be generated, otherwise    returns false.",2],["allow_nan?","JSON::Pure::Generator::State","classes/JSON/Pure/Generator/State.html#M000033","()","Returns true if NaN, Infinity, and -Infinity should be considered as valid JSON and output. ",2],["append_new_node","JSON::Editor::PopUpMenu","classes/JSON/Editor/PopUpMenu.html#M000107","(item)","Append a new node to the selected Hash or Array. ",2],["array_nl","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000176","()","          This string is put at the end of a line that holds a JSON array.     ",2],["array_nl=","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000177","(p1)","          This string is put at the end of a line that holds a JSON array.     ",2],["as_json","Date","classes/Date.html#M000007","(*)","Returns a hash, that will be turned into a JSON object and represent this object. ",2],["as_json","DateTime","classes/DateTime.html#M000010","(*)","Returns a hash, that will be turned into a JSON object and represent this object. ",2],["as_json","Exception","classes/Exception.html#M000019","(*)","Returns a hash, that will be turned into a JSON object and represent this object. ",2],["as_json","Range","classes/Range.html#M000013","(*)","Returns a hash, that will be turned into a JSON object and represent this object. ",2],["as_json","Regexp","classes/Regexp.html#M000022","(*)","Returns a hash, that will be turned into a JSON object and represent this object. ",2],["as_json","Struct","classes/Struct.html#M000016","(*)","Returns a hash, that will be turned into a JSON object and represent this object. ",2],["as_json","Symbol","classes/Symbol.html#M000000","(*)","Returns a hash, that will be turned into a JSON object and represent this object. ",2],["as_json","Time","classes/Time.html#M000004","(*)","Returns a hash, that will be turned into a JSON object and represent this object. ",2],["ascii_only?","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000182","()","          Returns true, if NaN, Infinity, and -Infinity should be generated, otherwise    returns false.",2],["ascii_only?","JSON::Pure::Generator::State","classes/JSON/Pure/Generator/State.html#M000034","()","",2],["ask_for_element","JSON::Editor::JSONTreeView","classes/JSON/Editor/JSONTreeView.html#M000136","(parent = nil, default_type = nil, value_text = @content)","Ask for an element to be appended _parent_. ",2],["ask_for_find_term","JSON::Editor::JSONTreeView","classes/JSON/Editor/JSONTreeView.html#M000138","(search = nil)","Ask for a find term to search for in the tree. Returns the term as a string. ",2],["ask_for_hash_pair","JSON::Editor::JSONTreeView","classes/JSON/Editor/JSONTreeView.html#M000135","(parent)","Ask for a hash key, value pair to be added to the Hash node _parent_. ",2],["ask_for_location","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#M000162","()","Ask for location URI a to load data from. Returns the URI as a string. ",2],["ask_for_order","JSON::Editor::JSONTreeView","classes/JSON/Editor/JSONTreeView.html#M000137","()","Ask for an order criteria for sorting, using _x_ for the element in question. Returns the order criterium,",2],["ask_save","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#M000146","()","Opens a dialog, asking, if changes should be saved to a file. ",2],["change","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#M000142","()","Sets editor status to changed, to indicate that the edited data containts unsaved changes. ",2],["change_node","JSON::Editor::PopUpMenu","classes/JSON/Editor/PopUpMenu.html#M000102","(item)","Change the type or content of the selected node. ",2],["check_circular?","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000180","()","        Returns true, if circular data structures should be checked,   otherwise returns false.    ",2],["check_circular?","JSON::Pure::Generator::State","classes/JSON/Pure/Generator/State.html#M000032","()","Returns true, if circular data structures are checked, otherwise returns false. ",2],["clear","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#M000149","()","Clear the current model, after asking to save all unsaved changes. ",2],["collapse_expand","JSON::Editor::PopUpMenu","classes/JSON/Editor/PopUpMenu.html#M000109","(item)","Recursively collapse/expand a subtree starting from the selected node. ",2],["collapsed_nodes","JSON::Editor::OptionsMenu","classes/JSON/Editor/OptionsMenu.html#M000125","(item)","Collapse/Expand all nodes by default. ",2],["configure","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000185","(p1)","          Configure this State instance with the Hash _opts_, and return    itself.     ",2],["configure","JSON::Pure::Generator::State","classes/JSON/Pure/Generator/State.html#M000035","(opts)","Configure this State instance with the Hash _opts_, and return itself. ",2],["const_defined_in?","JSON","classes/JSON.html#M000074","(modul, constant)","",2],["const_defined_in?","JSON","classes/JSON.html#M000073","(modul, constant)","",2],["content","JSON::Editor::Gtk::TreeIter","classes/JSON/Editor/Gtk/TreeIter.html#M000095","()","Returns the content of this node. ",2],["content=","JSON::Editor::Gtk::TreeIter","classes/JSON/Editor/Gtk/TreeIter.html#M000096","(value)","Sets the content of this node to _value_. ",2],["copy","JSON::Editor::EditMenu","classes/JSON/Editor/EditMenu.html#M000119","(item)","Copy data from model into primary clipboard. ",2],["copy_node","JSON::Editor::PopUpMenu","classes/JSON/Editor/PopUpMenu.html#M000104","(item)","Copy the selected node and its subtree, and save it into the clipboard. ",2],["create","JSON::Editor::EditMenu","classes/JSON/Editor/EditMenu.html#M000124","()","Create the menu. ",2],["create","JSON::Editor::FileMenu","classes/JSON/Editor/FileMenu.html#M000118","()","Create the menu. ",2],["create","JSON::Editor::MenuExtension","classes/JSON/Editor/MenuExtension.html#M000100","()","This method should be implemented in subclasses to create the #menu of this instance. It has to be called",2],["create","JSON::Editor::OptionsMenu","classes/JSON/Editor/OptionsMenu.html#M000127","()","Create the menu. ",2],["create","JSON::Editor::PopUpMenu","classes/JSON/Editor/PopUpMenu.html#M000110","()","Create the menu. ",2],["create_menu_bar","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#M000141","()","Creates the menu bar with the pulldown menus and returns it. ",2],["create_node","JSON::Editor::JSONTreeView","classes/JSON/Editor/JSONTreeView.html#M000134","(parent, type, content)","Create a _type_ node with content _content_, and add it to _parent_ in the model. If _parent_ is nil,",2],["cut_node","JSON::Editor::PopUpMenu","classes/JSON/Editor/PopUpMenu.html#M000103","(item)","Cut the selected node and its subtree, and save it into the clipboard. ",2],["data2model","JSON::Editor","classes/JSON/Editor.html#M000089","(data, model = nil, parent = nil)","Convert the Ruby data structure _data_ into tree model data for Gtk and returns the whole model. If the",2],["depth","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000183","()","          This integer returns the current depth of data structure nesting.     ",2],["depth=","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000184","(p1)","          This sets the maximum level of data structure nesting in the generated JSON    to the integer",2],["display_status","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#M000145","(text)","Displays _text_ in the status bar. ",2],["display_title","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#M000148","()","Display the new title according to the editor's current state. ",2],["dump","JSON","classes/JSON.html#M000069","(obj, anIO = nil, limit = nil)","Dumps _obj_ as a JSON string, i.e. calls generate on the object and returns the result. If anIO (an IO",2],["each","JSON::Editor::Gtk::TreeIter","classes/JSON/Editor/Gtk/TreeIter.html#M000090","()","Traverse each of this Gtk::TreeIter instance's children and yield to them. ",2],["edit","JSON::Editor","classes/JSON/Editor.html#M000164","(json, encoding = 'utf8')","Edit the string _json_ with encoding _encoding_ in the editor. ",2],["edit","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#M000153","(json)","Edit the string _json_ in the editor. ",2],["error_dialog","JSON::Editor","classes/JSON/Editor.html#M000086","(window, text)","Opens an error dialog on top of _window_ showing the error message _text_. ",2],["expand_collapse","JSON::Editor::JSONTreeView","classes/JSON/Editor/JSONTreeView.html#M000139","(iter)","Expand or collapse row pointed to by _iter_ according to the #expanded attribute. ",2],["fast_generate","JSON","classes/JSON.html#M000064","(obj, opts = nil)","Generate a JSON document from the Ruby data structure _obj_ and return it. This method disables the checks",2],["fetch_icon","JSON::Editor","classes/JSON/Editor.html#M000085","(name)","Returns the Gdk::Pixbuf of the icon named _name_ from the icon cache. ",2],["file_open","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#M000152","(filename = nil)","Open the file _filename_ or call the #select_file method to ask for a filename. ",2],["file_save","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#M000154","()","Save the current file. ",2],["file_save_as","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#M000155","()","Save the current file as the filename  ",2],["find","JSON::Editor::EditMenu","classes/JSON/Editor/EditMenu.html#M000121","(item)","Find a string in all nodes' contents and select the found node in the treeview. ",2],["find_again","JSON::Editor::EditMenu","classes/JSON/Editor/EditMenu.html#M000122","(item)","Repeat the last search given by #find. ",2],["from_state","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000165","(p1)","          Creates a State object from _opts_, which ought to be Hash to create a    new State instance",2],["from_state","JSON::Pure::Generator::State","classes/JSON/Pure/Generator/State.html#M000029","(opts)","Creates a State object from _opts_, which ought to be Hash to create a new State instance configured",2],["generate","JSON","classes/JSON.html#M000063","(obj, opts = nil)","Generate a JSON document from the Ruby data structure _obj_ and return it. _state_ is * a JSON::State",2],["generate","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000188","(p1)","          Generates a valid JSON document from object +obj+ and returns the    result. If no valid JSON",2],["generate","JSON::Pure::Generator::State","classes/JSON/Pure/Generator/State.html#M000038","(obj)","Generates a valid JSON document from object +obj+ and returns the result. If no valid JSON document can",2],["iconv","JSON","classes/JSON.html#M000071","(to, from, string)","Encodes string using Ruby's _String.encode_ ",2],["iconv","JSON","classes/JSON.html#M000072","(to, from, string)","Encodes string using _iconv_ library ",2],["included","JSON::Ext::Generator::GeneratorMethods::String","classes/JSON/Ext/Generator/GeneratorMethods/String.html#M000195","(p1)","          Extends _modul_ with the String::Extend module.     ",2],["included","JSON::Pure::Generator::GeneratorMethods::String","classes/JSON/Pure/Generator/GeneratorMethods/String.html#M000051","(modul)","Extends _modul_ with the String::Extend module. ",2],["indent","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000168","()","          This string is used to indent levels in the JSON text.     ",2],["indent=","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000169","(p1)","          This string is used to indent levels in the JSON text.     ",2],["initialize_copy","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000167","(p1)","          Initializes this object from orig if it to be duplicated/cloned and returns    it.    ",2],["insert_new_node","JSON::Editor::PopUpMenu","classes/JSON/Editor/PopUpMenu.html#M000108","(item)","Insert a new node into an Array before the selected element. ",2],["json/common","Object","classes/Object.html#M000024","","= JavaScript Object Notation (JSON) JSON is a lightweight data-interchange format. It is easy for us",2],["json_creatable?","Class","classes/Class.html#M000078","()","Returns true, if this class can be used to create an instance from a serialised JSON string. The class",2],["json_create","Date","classes/Date.html#M000006","(object)","Deserializes JSON string by converting Julian year <tt>y</tt>, month <tt>m</tt>, day <tt>d</tt> and Day",2],["json_create","DateTime","classes/DateTime.html#M000009","(object)","Deserializes JSON string by converting year <tt>y</tt>, month <tt>m</tt>, day <tt>d</tt>, hour <tt>H</tt>,",2],["json_create","Exception","classes/Exception.html#M000018","(object)","Deserializes JSON string by constructing new Exception object with message <tt>m</tt> and backtrace <tt>b</tt>",2],["json_create","JSON::Ext::Generator::GeneratorMethods::String::Extend","classes/JSON/Ext/Generator/GeneratorMethods/String/Extend.html#M000199","(p1)","          Raw Strings are JSON Objects (the raw bytes are stored in an array for the    key \"raw\"). The",2],["json_create","JSON::Pure::Generator::GeneratorMethods::String::Extend","classes/JSON/Pure/Generator/GeneratorMethods/String/Extend.html#M000050","(o)","Raw Strings are JSON Objects (the raw bytes are stored in an array for the key \"raw\"). The Ruby String",2],["json_create","Range","classes/Range.html#M000012","(object)","Deserializes JSON string by constructing new Range object with arguments <tt>a</tt> serialized by <tt>to_json</tt>.",2],["json_create","Regexp","classes/Regexp.html#M000021","(object)","Deserializes JSON string by constructing new Regexp object with source <tt>s</tt> (Regexp or String)",2],["json_create","Struct","classes/Struct.html#M000015","(object)","Deserializes JSON string by constructing new Struct object with values <tt>v</tt> serialized by <tt>to_json</tt>.",2],["json_create","Symbol","classes/Symbol.html#M000002","(o)","Deserializes JSON string by converting the <tt>string</tt> value stored in the object to a Symbol ",2],["json_create","Time","classes/Time.html#M000003","(object)","Deserializes JSON string by converting time since epoch to Time ",2],["load","JSON","classes/JSON.html#M000066","(source, proc = nil)","Load a ruby data structure from a JSON _source_ and return it. A source can either be a string-like object,",2],["load_file","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#M000157","(filename)","Load the file named _filename_ into the editor as a JSON document. ",2],["load_location","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#M000158","(uri)","Load the data at location _uri_ into the editor as a JSON document. ",2],["location_open","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#M000151","(uri = nil)","Open the data at the location _uri_, if given. Otherwise open a dialog to ask for the _uri_. ",2],["max_nesting","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000178","()","          This integer returns the maximum level of data structure nesting in    the generated JSON,",2],["max_nesting=","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000179","(p1)","          This sets the maximum level of data structure nesting in the generated JSON    to the integer",2],["merge","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000203","(p1)","Alias for #configure",2],["merge","JSON::Pure::Generator::State","classes/JSON/Pure/Generator/State.html#M000036","(opts)","Alias for #configure",2],["method_missing","JSON::Editor::MenuExtension","classes/JSON/Editor/MenuExtension.html#M000101","(*a, &b)","",2],["model2data","JSON::Editor","classes/JSON/Editor.html#M000088","(iter)","Convert the tree model starting from Gtk::TreeIter _iter_ into a Ruby data structure and return it. ",2],["new","JSON::Editor::FileMenu","classes/JSON/Editor/FileMenu.html#M000111","(item)","Clear the model and filename, but ask to save the JSON document, if unsaved changes have occured. ",2],["new","JSON::Editor::JSONTreeView","classes/JSON/Editor/JSONTreeView.html#M000128","(window)","Creates a JSONTreeView instance, the parameter _window_ is a MainWindow instance and used for self delegation.",2],["new","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#M000140","(encoding)","",2],["new","JSON::Editor::MenuExtension","classes/JSON/Editor/MenuExtension.html#M000097","(treeview)","Creates a Menu, that includes MenuExtension. _treeview_ is the Gtk::TreeView, on which it operates. ",2],["new","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000166","(...)","          Instantiates a new State object, configured by _opts_.       _opts_ can have the following",2],["new","JSON::Ext::Parser","classes/JSON/Ext/Parser.html#M000204","(...)","          Creates a new JSON::Ext::Parser instance for the string _source_.       Creates a new JSON::Ext::Parser",2],["new","JSON::Pure::Generator::State","classes/JSON/Pure/Generator/State.html#M000030","(opts = {})","Instantiates a new State object, configured by _opts_. _opts_ can have the following keys: * *indent*:",2],["new","JSON::Pure::Parser","classes/JSON/Pure/Parser.html#M000079","(source, opts = {})","Creates a new JSON::Pure::Parser instance for the string _source_. It will be configured by the _opts_",2],["object_nl","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000174","()","          This string is put at the end of a line that holds a JSON object (or    Hash).     ",2],["object_nl=","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000175","(p1)","          This string is put at the end of a line that holds a JSON object (or    Hash).     ",2],["open","JSON::Editor::FileMenu","classes/JSON/Editor/FileMenu.html#M000112","(item)","Open a file and load it into the editor. Ask to save the JSON document first, if unsaved changes have",2],["open_location","JSON::Editor::FileMenu","classes/JSON/Editor/FileMenu.html#M000113","(item)","",2],["parse","JSON","classes/JSON.html#M000061","(source, opts = {})","Parse the JSON document _source_ into a Ruby data structure and return it. _opts_ can have the following",2],["parse","JSON::Ext::Parser","classes/JSON/Ext/Parser.html#M000205","()","           Parses the current JSON text _source_ and returns the complete data     structure as a result.",2],["parse","JSON::Pure::Parser","classes/JSON/Pure/Parser.html#M000080","()","Parses the current JSON string _source_ and returns the complete data structure as a result. ",2],["parse!","JSON","classes/JSON.html#M000062","(source, opts = {})","Parse the JSON document _source_ into a Ruby data structure and return it. The bang version of the parse",2],["paste","JSON::Editor::EditMenu","classes/JSON/Editor/EditMenu.html#M000120","(item)","Copy json text from primary clipboard into model. ",2],["paste_node_appending","JSON::Editor::PopUpMenu","classes/JSON/Editor/PopUpMenu.html#M000105","(item)","Paste the data in the clipboard into the selected Array or Hash by appending it. ",2],["paste_node_inserting_before","JSON::Editor::PopUpMenu","classes/JSON/Editor/PopUpMenu.html#M000106","(item)","Paste the data in the clipboard into the selected Array inserting it before the selected element. ",2],["pretty_generate","JSON","classes/JSON.html#M000065","(obj, opts = nil)","Generate a JSON document from the Ruby data structure _obj_ and return it. The returned document is a",2],["pretty_saving","JSON::Editor::OptionsMenu","classes/JSON/Editor/OptionsMenu.html#M000126","(item)","Toggle pretty saving mode on/off. ",2],["question_dialog","JSON::Editor","classes/JSON/Editor.html#M000087","(window, text)","Opens a yes/no question dialog on top of _window_ showing the error message _text_. If yes was answered",2],["quit","JSON::Editor::FileMenu","classes/JSON/Editor/FileMenu.html#M000117","(item)","Quit the editor, after asking to save any unsaved changes first. ",2],["quit","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#M000147","()","Quit this editor, that is, leave this editor's main loop. ",2],["read_data","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#M000160","(filename)","Read a JSON document from the file named _filename_, parse it into a ruby data structure, and return",2],["recurse_proc","JSON","classes/JSON.html#M000067","(result, &proc)","Recursively calls passed _Proc_ if the parsed data structure is an _Array_ or _Hash_ ",2],["recursive_each","JSON::Editor::Gtk::TreeIter","classes/JSON/Editor/Gtk/TreeIter.html#M000091","(&block)","Recursively traverse all nodes of this Gtk::TreeIter's subtree (including self) and yield to them. ",2],["remove_subtree","JSON::Editor::Gtk::TreeIter","classes/JSON/Editor/Gtk/TreeIter.html#M000092","(model)","Remove the subtree of this Gtk::TreeIter instance from the model _model_. ",2],["restore","JSON","classes/JSON.html#M000068","(source, proc = nil)","Alias for #load",2],["revert","JSON::Editor::FileMenu","classes/JSON/Editor/FileMenu.html#M000114","(item)","Revert the current JSON document in the editor to the saved version. ",2],["save","JSON::Editor::FileMenu","classes/JSON/Editor/FileMenu.html#M000115","(item)","Save the current JSON document. ",2],["save_as","JSON::Editor::FileMenu","classes/JSON/Editor/FileMenu.html#M000116","(item)","Save the current JSON document under the given filename. ",2],["select_file","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#M000161","(message)","Open a file selecton dialog, displaying _message_, and return the selected filename or nil, if no file",2],["sort","JSON::Editor::EditMenu","classes/JSON/Editor/EditMenu.html#M000123","(item)","Sort (Reverse sort) all elements of the selected array by the given expression. _x_ is the element in",2],["source","JSON::Ext::Parser","classes/JSON/Ext/Parser.html#M000206","()","          Returns a copy of the current _source_ string, that was used to construct    this Parser. ",2],["space","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000170","()","          This string is used to insert a space between the tokens in a JSON    string.     ",2],["space=","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000171","(p1)","          This string is used to insert a space between the tokens in a JSON    string.     ",2],["space_before","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000172","()","          This string is used to insert a space before the ':' in JSON objects.     ",2],["space_before=","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000173","(p1)","          This string is used to insert a space before the ':' in JSON objects.     ",2],["start","JSON::Editor","classes/JSON/Editor.html#M000163","(encoding = 'utf8')","Starts a JSON Editor. If a block was given, it yields to the JSON::Editor::MainWindow instance. ",2],["store_file","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#M000156","(path)","Store the current JSON document to _path_. ",2],["to_h","JSON::Ext::Generator::State","classes/JSON/Ext/Generator/State.html#M000186","()","          Returns the configuration instance variables as a hash, that can be    passed to the configure",2],["to_h","JSON::Pure::Generator::State","classes/JSON/Pure/Generator/State.html#M000037","()","Returns the configuration instance variables as a hash, that can be passed to the configure method. ",2],["to_json","Date","classes/Date.html#M000008","(*args)","Stores class name (Date) with Julian year <tt>y</tt>, month <tt>m</tt>, day <tt>d</tt> and Day of Calendar",2],["to_json","DateTime","classes/DateTime.html#M000011","(*args)","Stores class name (DateTime) with Julian year <tt>y</tt>, month <tt>m</tt>, day <tt>d</tt>, hour <tt>H</tt>,",2],["to_json","Exception","classes/Exception.html#M000020","(*args)","Stores class name (Exception) with message <tt>m</tt> and backtrace array <tt>b</tt> as JSON string ",2],["to_json","JSON::Ext::Generator::GeneratorMethods::Array","classes/JSON/Ext/Generator/GeneratorMethods/Array.html#M000191","(...)","          Returns a JSON string containing a JSON array, that is generated from    this Array instance.",2],["to_json","JSON::Ext::Generator::GeneratorMethods::Bignum","classes/JSON/Ext/Generator/GeneratorMethods/Bignum.html#M000193","(...)","          Returns a JSON string representation for this Integer number.     ",2],["to_json","JSON::Ext::Generator::GeneratorMethods::FalseClass","classes/JSON/Ext/Generator/GeneratorMethods/FalseClass.html#M000201","(...)","          Returns a JSON string for false: 'false'.     ",2],["to_json","JSON::Ext::Generator::GeneratorMethods::Fixnum","classes/JSON/Ext/Generator/GeneratorMethods/Fixnum.html#M000192","(...)","          Returns a JSON string representation for this Integer number.     ",2],["to_json","JSON::Ext::Generator::GeneratorMethods::Float","classes/JSON/Ext/Generator/GeneratorMethods/Float.html#M000194","(...)","          Returns a JSON string representation for this Float number.     ",2],["to_json","JSON::Ext::Generator::GeneratorMethods::Hash","classes/JSON/Ext/Generator/GeneratorMethods/Hash.html#M000190","(...)","          Returns a JSON string containing a JSON object, that is generated from    this Hash instance.",2],["to_json","JSON::Ext::Generator::GeneratorMethods::NilClass","classes/JSON/Ext/Generator/GeneratorMethods/NilClass.html#M000202","(...)","          Returns a JSON string for nil: 'null'.     ",2],["to_json","JSON::Ext::Generator::GeneratorMethods::Object","classes/JSON/Ext/Generator/GeneratorMethods/Object.html#M000189","(...)","          Converts this object to a string (calling #to_s), converts    it to a JSON string, and returns",2],["to_json","JSON::Ext::Generator::GeneratorMethods::String","classes/JSON/Ext/Generator/GeneratorMethods/String.html#M000196","(...)","          This string should be encoded with UTF-8 A call to this method    returns a JSON string encoded",2],["to_json","JSON::Ext::Generator::GeneratorMethods::TrueClass","classes/JSON/Ext/Generator/GeneratorMethods/TrueClass.html#M000200","(...)","          Returns a JSON string for true: 'true'.     ",2],["to_json","JSON::Pure::Generator::GeneratorMethods::Array","classes/JSON/Pure/Generator/GeneratorMethods/Array.html#M000044","(state = nil, *)","Returns a JSON string containing a JSON array, that is unparsed from this Array instance. _state_ is",2],["to_json","JSON::Pure::Generator::GeneratorMethods::FalseClass","classes/JSON/Pure/Generator/GeneratorMethods/FalseClass.html#M000055","(*)","Returns a JSON string for false: 'false'. ",2],["to_json","JSON::Pure::Generator::GeneratorMethods::Float","classes/JSON/Pure/Generator/GeneratorMethods/Float.html#M000047","(state = nil, *)","Returns a JSON string representation for this Float number. ",2],["to_json","JSON::Pure::Generator::GeneratorMethods::Hash","classes/JSON/Pure/Generator/GeneratorMethods/Hash.html#M000041","(state = nil, *)","Returns a JSON string containing a JSON object, that is unparsed from this Hash instance. _state_ is",2],["to_json","JSON::Pure::Generator::GeneratorMethods::Integer","classes/JSON/Pure/Generator/GeneratorMethods/Integer.html#M000046","(*)","Returns a JSON string representation for this Integer number. ",2],["to_json","JSON::Pure::Generator::GeneratorMethods::NilClass","classes/JSON/Pure/Generator/GeneratorMethods/NilClass.html#M000056","(*)","Returns a JSON string for nil: 'null'. ",2],["to_json","JSON::Pure::Generator::GeneratorMethods::Object","classes/JSON/Pure/Generator/GeneratorMethods/Object.html#M000040","(*)","Converts this object to a string (calling #to_s), converts it to a JSON string, and returns the result.",2],["to_json","JSON::Pure::Generator::GeneratorMethods::String","classes/JSON/Pure/Generator/GeneratorMethods/String.html#M000049","(state = nil, *args)","This string should be encoded with UTF-8 A call to this method returns a JSON string encoded with UTF16",2],["to_json","JSON::Pure::Generator::GeneratorMethods::String","classes/JSON/Pure/Generator/GeneratorMethods/String.html#M000048","(state = nil, *args)","This string should be encoded with UTF-8 A call to this method returns a JSON string encoded with UTF16",2],["to_json","JSON::Pure::Generator::GeneratorMethods::TrueClass","classes/JSON/Pure/Generator/GeneratorMethods/TrueClass.html#M000054","(*)","Returns a JSON string for true: 'true'. ",2],["to_json","Range","classes/Range.html#M000014","(*args)","Stores class name (Range) with JSON array of arguments <tt>a</tt> which include <tt>first</tt> (integer),",2],["to_json","Regexp","classes/Regexp.html#M000023","(*)","Stores class name (Regexp) with options <tt>o</tt> and source <tt>s</tt> (Regexp or String) as JSON string",2],["to_json","Struct","classes/Struct.html#M000017","(*args)","Stores class name (Struct) with Struct values <tt>v</tt> as a JSON string. Only named structs are supported.",2],["to_json","Symbol","classes/Symbol.html#M000001","(*a)","Stores class name (Symbol) with String representation of Symbol as a JSON string. ",2],["to_json","Time","classes/Time.html#M000005","(*args)","Stores class name (Time) with number of seconds since epoch and number of microseconds for Time as JSON",2],["to_json_raw","JSON::Ext::Generator::GeneratorMethods::String","classes/JSON/Ext/Generator/GeneratorMethods/String.html#M000197","(...)","          This method creates a JSON text from the result of a call to    to_json_raw_object of this",2],["to_json_raw","JSON::Pure::Generator::GeneratorMethods::String","classes/JSON/Pure/Generator/GeneratorMethods/String.html#M000053","(*args)","This method creates a JSON text from the result of a call to to_json_raw_object of this String. ",2],["to_json_raw_object","JSON::Ext::Generator::GeneratorMethods::String","classes/JSON/Ext/Generator/GeneratorMethods/String.html#M000198","()","          This method creates a raw object hash, that can be nested into    other data structures and",2],["to_json_raw_object","JSON::Pure::Generator::GeneratorMethods::String","classes/JSON/Pure/Generator/GeneratorMethods/String.html#M000052","()","This method creates a raw object hash, that can be nested into other data structures and will be unparsed",2],["type","JSON::Editor::Gtk::TreeIter","classes/JSON/Editor/Gtk/TreeIter.html#M000093","()","Returns the type of this node. ",2],["type=","JSON::Editor::Gtk::TreeIter","classes/JSON/Editor/Gtk/TreeIter.html#M000094","(value)","Sets the type of this node to _value_. This implies setting the respective icon accordingly. ",2],["unchange","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#M000143","()","Sets editor status to unchanged, to indicate that the edited data doesn't containt unsaved changes. ",2],["view_new_model","JSON::Editor::MainWindow","classes/JSON/Editor/MainWindow.html#M000144","(model)","Puts a new model _model_ into the Gtk::TreeView to be edited. ",2],["README.rdoc","files/README_rdoc.html","files/README_rdoc.html","","= JSON implementation for Ruby http://travis-ci.org/flori/json.png  == Description  This is a implementation",3],["generator.c","files/ext/json/ext/generator/generator_c.html","files/ext/json/ext/generator/generator_c.html","","",3],["parser.c","files/ext/json/ext/parser/parser_c.html","files/ext/json/ext/parser/parser_c.html","","",3],["json.rb","files/lib/json_rb.html","files/lib/json_rb.html","","= JavaScript Object Notation (JSON) JSON is a lightweight data-interchange format. It is easy for us",3],["core.rb","files/lib/json/add/core_rb.html","files/lib/json/add/core_rb.html","","This file contains implementations of ruby core's custom objects for serialisation/deserialisation. ",3],["rails.rb","files/lib/json/add/rails_rb.html","files/lib/json/add/rails_rb.html","","This file used to implementations of rails custom objects for serialisation/deserialisation and is obsoleted",3],["common.rb","files/lib/json/common_rb.html","files/lib/json/common_rb.html","","",3],["editor.rb","files/lib/json/editor_rb.html","files/lib/json/editor_rb.html","","To use the GUI JSON editor, start the edit_json.rb executable script. It requires ruby-gtk to be installed.",3],["ext.rb","files/lib/json/ext_rb.html","files/lib/json/ext_rb.html","","",3],["pure.rb","files/lib/json/pure_rb.html","files/lib/json/pure_rb.html","","",3],["generator.rb","files/lib/json/pure/generator_rb.html","files/lib/json/pure/generator_rb.html","","",3],["parser.rb","files/lib/json/pure/parser_rb.html","files/lib/json/pure/parser_rb.html","","",3],["version.rb","files/lib/json/version_rb.html","files/lib/json/version_rb.html","","",3]]}}